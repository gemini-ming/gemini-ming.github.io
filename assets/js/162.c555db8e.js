(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{536:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"执行计划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行计划"}},[s._v("#")]),s._v(" 执行计划")]),s._v(" "),t("h2",{attrs:{id:"获取执行计划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取执行计划"}},[s._v("#")]),s._v(" 获取执行计划")]),s._v(" "),t("p",[s._v("数据库优化器可能会根据连接方式、连接条件等因素选择不同的执行计划。你可以通过 "),t("code",[s._v("EXPLAIN")]),s._v(" 关键字查看两个查询的执行计划，以便更好地理解优化器的选择。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPLAIN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 替换 ... 部分为你的查询内容")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("观察执行计划并查看其中的关键信息，这可以帮助你理解查询优化器是如何选择执行计划的，从而找到可能导致性能差异的原因。")]),s._v(" "),t("h2",{attrs:{id:"内容含义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内容含义"}},[s._v("#")]),s._v(" 内容含义")]),s._v(" "),t("p",[s._v("执行计划是数据库优化器生成的一种表示查询执行方式的输出。它提供了关于查询如何执行的详细信息，包括表的访问顺序、使用的索引、连接方式等。")]),s._v(" "),t("p",[s._v("执行计划的输出可能会因数据库管理系统而异，下面是一些通用的解释：")]),s._v(" "),t("ol",[t("li",[t("p",[t("strong",[s._v("ID：")]),s._v(" 序号，每个操作的唯一标识符，通常从 1 开始递增。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Select Type：")]),s._v(" 表示查询的类型，包括 "),t("code",[s._v("SIMPLE")]),s._v("（简单查询）、"),t("code",[s._v("PRIMARY")]),s._v("（主查询）、"),t("code",[s._v("SUBQUERY")]),s._v("（子查询）等。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Table：")]),s._v(" 表名，操作涉及的表。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Type：")]),s._v(" 访问表的方式，包括 "),t("code",[s._v("ALL")]),s._v("（全表扫描）、"),t("code",[s._v("INDEX")]),s._v("（索引扫描）、"),t("code",[s._v("range")]),s._v("（范围扫描）等。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Possible Keys：")]),s._v(" 可能用于执行查询的索引。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Key：")]),s._v(" 实际用于执行查询的索引。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Key Length：")]),s._v(" 索引的长度。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Ref：")]),s._v(" 显示连接的列。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Rows：")]),s._v(" 预计需要检查的行数。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("filtered：")]),s._v(" 表示经过表扫描或索引扫描后，通过过滤条件的行的百分比。具体来说，它表示在执行计划的某个步骤中，有多少行满足查询的 WHERE 子句或其他过滤条件。"),t("code",[s._v("filtered")]),s._v(" 列的值范围是 0 到 100，表示过滤条件满足的行的百分比。以下是一些可能的情况：")]),s._v(" "),t("ul",[t("li",[s._v("如果 "),t("code",[s._v("filtered")]),s._v(" 为 100%，表示所有经过扫描的行都满足过滤条件。")]),s._v(" "),t("li",[s._v("如果 "),t("code",[s._v("filtered")]),s._v(" 为 0%，表示没有一行满足过滤条件。")]),s._v(" "),t("li",[s._v("如果 "),t("code",[s._v("filtered")]),s._v(" 介于 0% 和 100% 之间，表示部分行满足过滤条件。")])]),s._v(" "),t("p",[s._v("这个值的大小可以帮助开发人员分析查询性能。如果 "),t("code",[s._v("filtered")]),s._v(" 较低，可能意味着过滤条件不够严格，导致了更多的行需要被检查。反之，如果 "),t("code",[s._v("filtered")]),s._v(" 较高，则说明过滤条件较为有效，减少了不必要的行扫描，提高了查询性能。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Extra：")]),s._v(" 其他信息，可能包括文件排序、临时表等。")])])]),s._v(" "),t("blockquote",[t("p",[s._v("通过观察执行计划的输出，你可以了解查询是如何执行的，哪些步骤可能导致性能问题。")]),s._v(" "),t("p",[s._v("以下是一些常见的优化提示：")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("使用索引：")]),s._v(" 确保查询中的条件列上有索引。")]),s._v(" "),t("li",[t("strong",[s._v("避免全表扫描：")]),s._v(" 尽量避免 "),t("code",[s._v("ALL")]),s._v(" 类型的访问，特别是对大表的情况。")]),s._v(" "),t("li",[t("strong",[s._v("合理使用连接：")]),s._v(" 确保连接条件足够明确，选择合适的连接类型。")]),s._v(" "),t("li",[t("strong",[s._v("考虑分区表：")]),s._v(" 对于大表，使用分区表可以提高查询性能。")]),s._v(" "),t("li",[t("strong",[s._v("注意临时表和文件排序：")]),s._v(" 如果看到 "),t("code",[s._v("Using temporary")]),s._v(" 或 "),t("code",[s._v("Using filesort")]),s._v("，可能需要考虑索引或调整查询。")])]),s._v(" "),t("h2",{attrs:{id:"访问表的方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问表的方式"}},[s._v("#")]),s._v(" 访问表的方式")]),s._v(" "),t("p",[s._v("以下是几种常见的访问表的方式：")]),s._v(" "),t("ol",[t("li",[t("p",[t("strong",[s._v("ALL")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("全表扫描，效率最低。所有行都被读取来找到匹配的行。")]),s._v(" "),t("li",[s._v("通常出现是因为缺少合适的索引。")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("index")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("全索引扫描，类似于全表扫描，但扫描的是索引树而不是数据行。")]),s._v(" "),t("li",[s._v("比全表扫描更快，因为索引树的大小通常比数据行小。")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("range")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("范围扫描，通过索引查找位于指定范围内的行。")]),s._v(" "),t("li",[s._v("适用于范围条件查询，比如 "),t("code",[s._v("BETWEEN")]),s._v(", "),t("code",[s._v("<")]),s._v(", "),t("code",[s._v(">")]),s._v(", "),t("code",[s._v("<=")]),s._v(", "),t("code",[s._v(">=")]),s._v(" 等。")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("ref")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("非唯一索引扫描，返回所有匹配某一单个值的行。")]),s._v(" "),t("li",[s._v("常见于非唯一索引和前缀索引的查询。")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("eq_ref")]),s._v(":")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("唯一索引扫描，返回最多一条匹配的行。")])]),s._v(" "),t("li",[t("p",[s._v("通常用于主键或唯一索引查询。")])]),s._v(" "),t("li",[t("p",[s._v("在执行计划中，"),t("code",[s._v("eq_ref")]),s._v(" 是一种连接方式，表示"),t("strong",[s._v("等值连接")]),s._v("。具体来说，"),t("code",[s._v("eq_ref")]),s._v(" 是指"),t("strong",[s._v("使用索引")]),s._v("查找关联表的唯一行。")]),s._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/imgs-blog/MySQL/image.39g277ea1mg0.webp",loading:"lazy"}})]),s._v(" "),t("blockquote",[t("p",[s._v("一般情况下，"),t("code",[s._v("eq_ref")]),s._v(" 出现在连接条件中使用了【唯一或主键索引】，并且查询优化器能够确定被引用的表中的每个值只与另一表中的一个唯一值匹配。")])]),s._v(" "),t("p",[s._v("举例说明，假设有两张表 A 和 B，它们通过 A 表的主键或唯一键与 B 表关联。执行计划中的 "),t("code",[s._v("eq_ref")]),s._v(" 表示对于 A 表的每一行，在 B 表中都只有一行与之匹配。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 示例表结构")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" A "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("data")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" B "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    a_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    other_data "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOREIGN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("REFERENCES")]),s._v(" A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查询")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPLAIN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" A\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" B "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("在上述查询中，如果使用了 A 表的主键或唯一键索引，那么连接操作的类型可能会显示为 "),t("code",[s._v("eq_ref")]),s._v("。")]),s._v(" "),t("p",[s._v("总的来说，"),t("code",[s._v("eq_ref")]),s._v(" 是一种高效的连接方式，因为它表示连接的列是唯一的，每行都只匹配一次。这通常是通过主键或唯一键来实现的。")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("const")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("常量查询，当查询结果最多有一条匹配的行，并且优化器能够将其视为常量。")]),s._v(" "),t("li",[s._v("通常用于主键或唯一索引的等值查询。")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("system")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("表只有一行（系统表），是 "),t("code",[s._v("const")]),s._v(" 类型的特例。")]),s._v(" "),t("li",[s._v("查询效率最高。")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("NULL")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("MySQL 无需访问表或索引直接就能得出结果。")]),s._v(" "),t("li",[s._v("例如 "),t("code",[s._v("SELECT 1 + 1")]),s._v("。")])])])]),s._v(" "),t("h2",{attrs:{id:"覆盖索引-covering-index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#覆盖索引-covering-index"}},[s._v("#")]),s._v(" 覆盖索引（Covering Index）")]),s._v(" "),t("p",[s._v("覆盖索引是指"),t("strong",[s._v("一个索引包含了查询所需的所有列")]),s._v("，不需要再回表（访问数据行）来获取数据。这样能显著提高查询性能，因为索引通常比数据行小且紧凑。")]),s._v(" "),t("h3",{attrs:{id:"示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例：")]),s._v(" "),t("p",[s._v("假设有一张表 "),t("code",[s._v("users")]),s._v("，有索引 "),t("code",[s._v("idx_name_email (name, email)")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" users "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    email "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    age "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" idx_name_email "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("如果执行以下查询：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" email "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" users "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'John'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("MySQL 可以直接从 "),t("code",[s._v("idx_name_email")]),s._v(" 索引中获取 "),t("code",[s._v("name")]),s._v(" 和 "),t("code",[s._v("email")]),s._v("，而不需要回表查询，从而提高查询性能。")]),s._v(" "),t("h2",{attrs:{id:"索引下推-index-condition-pushdown-icp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引下推-index-condition-pushdown-icp"}},[s._v("#")]),s._v(" 索引下推（Index Condition Pushdown, ICP）")]),s._v(" "),t("p",[s._v("索引下推是在 MySQL 5.6 及之后引入的优化技术。在使用索引扫描时，MySQL 优化器会将查询条件 “推” 到索引扫描过程中，而不是在索引扫描后再进行过滤。")]),s._v(" "),t("h3",{attrs:{id:"示例-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例-2"}},[s._v("#")]),s._v(" 示例：")]),s._v(" "),t("p",[s._v("假设有一张表 "),t("code",[s._v("employees")]),s._v("，有索引 "),t("code",[s._v("idx_last_name_first_name (last_name, first_name)")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    last_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    first_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    hire_date "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" idx_last_name_first_name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" first_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("如果执行以下查询：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" last_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Smith'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" first_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'J%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用索引下推，MySQL 优化器会在扫描 "),t("code",[s._v("idx_last_name_first_name")]),s._v(" 索引时，同时应用 "),t("code",[s._v("first_name LIKE 'J%'")]),s._v(" 过滤条件，而不是扫描完索引后再应用过滤条件。这减少了不必要的行访问，提高了查询效率。")])])}),[],!1,null,null,null);t.default=e.exports}}]);