(window.webpackJsonp=window.webpackJsonp||[]).push([[277],{655:function(a,t,s){"use strict";s.r(t);var r=s(4),e=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"正则表达式学习指南"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式学习指南"}},[a._v("#")]),a._v(" 正则表达式学习指南")]),a._v(" "),t("p",[a._v("在编程的世界里，正则表达式（Regular Expressions，简称"),t("em",[a._v("regex")]),a._v("）是一门不可或缺的艺术，它赋予了开发者强大的文本处理能力，让看似复杂的字符串匹配和替换任务变得简单而高效。本文旨在为初学者揭开正则表达式的神秘面纱，引导你掌握这一强大工具，成为文本处理领域的高手。")]),a._v(" "),t("h2",{attrs:{id:"一、正则表达式简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、正则表达式简介"}},[a._v("#")]),a._v(" 一、正则表达式简介")]),a._v(" "),t("p",[a._v("正则表达式是一种"),t("strong",[a._v("模式匹配语言")]),a._v("，用于在文本中搜索、替换或提取符合特定规则的字符串。无论是验证输入数据、清洗数据、还是从大量文本中提取信息，正则表达式都是你的得力助手。")]),a._v(" "),t("h2",{attrs:{id:"二、基础语法入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、基础语法入门"}},[a._v("#")]),a._v(" 二、基础语法入门")]),a._v(" "),t("h3",{attrs:{id:"_1-字符匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-字符匹配"}},[a._v("#")]),a._v(" 1. 字符匹配")]),a._v(" "),t("ul",[t("li",[t("strong",[t("code",[a._v(".")]),a._v("（点号）")]),a._v("：匹配任意单个字符（除换行符外）。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("[abc]")])]),a._v("：匹配括号内的任何一个字符，如'a'、'b'或'c'。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("[^abc]")])]),a._v("：匹配除括号内字符之外的任何字符。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("\\d")])]),a._v("：匹配数字（0-9）。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("\\D")])]),a._v("：匹配非数字字符。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("\\w")])]),a._v("：匹配字母、数字或下划线。与 "),t("code",[a._v('"[A-Za-z0-9_]"')]),a._v(" 等效。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("\\W")])]),a._v('：匹配非字母、数字或下划线的字符。与 "'),t("code",[a._v("[^A-Za-z0-9_]")]),a._v('" 等效。')]),a._v(" "),t("li",[t("strong",[t("code",[a._v("\\s")])]),a._v("：匹配任何空白字符，如空格、制表符、换页符等。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("\\S")])]),a._v("：匹配非空白字符。")])]),a._v(" "),t("h3",{attrs:{id:"_2-量词"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-量词"}},[a._v("#")]),a._v(" 2. 量词")]),a._v(" "),t("ul",[t("li",[t("strong",[t("code",[a._v("*")])]),a._v("：匹配前面元素的零次或多次出现。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("+")])]),a._v("：匹配前面元素的一次或多次出现。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("?")])]),a._v("：匹配前面元素的零次或一次出现。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("{n}")])]),a._v("：匹配前面元素恰好 n 次出现。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("{n,}")])]),a._v("：匹配前面元素至少 n 次出现。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("{n,m}")])]),a._v("：匹配前面元素至少n次，但不超过m次出现。")])]),a._v(" "),t("h3",{attrs:{id:"_3-特殊字符与分组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-特殊字符与分组"}},[a._v("#")]),a._v(" 3. 特殊字符与分组")]),a._v(" "),t("ul",[t("li",[t("strong",[t("code",[a._v("\\")])]),a._v("：用于转义特殊字符，使其作为普通字符处理。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("(expr)")])]),a._v("：将expr视为一个单元进行匹配，并可用于捕获匹配的内容。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("|")])]),a._v("：表示选择，匹配左边或右边的表达式。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("^")])]),a._v("：匹配字符串的开始。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("$")])]),a._v("：匹配字符串的结束。")])]),a._v(" "),t("h2",{attrs:{id:"三、实战演练"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、实战演练"}},[a._v("#")]),a._v(" 三、实战演练")]),a._v(" "),t("h3",{attrs:{id:"_1-邮箱验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-邮箱验证"}},[a._v("#")]),a._v(" 1. 邮箱验证")]),a._v(" "),t("p",[a._v("假设我们要验证一个字符串是否符合邮箱的基本格式，可以使用如下正则表达式：")]),a._v(" "),t("div",{staticClass:"language-regex line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-regex"}},[t("code",[t("span",{pre:!0,attrs:{class:"token anchor function"}},[a._v("^")]),t("span",{pre:!0,attrs:{class:"token char-class"}},[t("span",{pre:!0,attrs:{class:"token char-class-punctuation punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token range"}},[a._v("a"),t("span",{pre:!0,attrs:{class:"token range-punctuation operator"}},[a._v("-")]),a._v("z")]),t("span",{pre:!0,attrs:{class:"token range"}},[a._v("A"),t("span",{pre:!0,attrs:{class:"token range-punctuation operator"}},[a._v("-")]),a._v("Z")]),t("span",{pre:!0,attrs:{class:"token range"}},[a._v("0"),t("span",{pre:!0,attrs:{class:"token range-punctuation operator"}},[a._v("-")]),a._v("9")]),a._v("._%+-"),t("span",{pre:!0,attrs:{class:"token char-class-punctuation punctuation"}},[a._v("]")])]),t("span",{pre:!0,attrs:{class:"token quantifier number"}},[a._v("+")]),a._v("@"),t("span",{pre:!0,attrs:{class:"token char-class"}},[t("span",{pre:!0,attrs:{class:"token char-class-punctuation punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token range"}},[a._v("a"),t("span",{pre:!0,attrs:{class:"token range-punctuation operator"}},[a._v("-")]),a._v("z")]),t("span",{pre:!0,attrs:{class:"token range"}},[a._v("A"),t("span",{pre:!0,attrs:{class:"token range-punctuation operator"}},[a._v("-")]),a._v("Z")]),t("span",{pre:!0,attrs:{class:"token range"}},[a._v("0"),t("span",{pre:!0,attrs:{class:"token range-punctuation operator"}},[a._v("-")]),a._v("9")]),a._v(".-"),t("span",{pre:!0,attrs:{class:"token char-class-punctuation punctuation"}},[a._v("]")])]),t("span",{pre:!0,attrs:{class:"token quantifier number"}},[a._v("+")]),t("span",{pre:!0,attrs:{class:"token special-escape escape"}},[a._v("\\.")]),t("span",{pre:!0,attrs:{class:"token char-class"}},[t("span",{pre:!0,attrs:{class:"token char-class-punctuation punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token range"}},[a._v("a"),t("span",{pre:!0,attrs:{class:"token range-punctuation operator"}},[a._v("-")]),a._v("z")]),t("span",{pre:!0,attrs:{class:"token range"}},[a._v("A"),t("span",{pre:!0,attrs:{class:"token range-punctuation operator"}},[a._v("-")]),a._v("Z")]),t("span",{pre:!0,attrs:{class:"token char-class-punctuation punctuation"}},[a._v("]")])]),t("span",{pre:!0,attrs:{class:"token quantifier number"}},[a._v("{2,}")]),t("span",{pre:!0,attrs:{class:"token anchor function"}},[a._v("$")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[t("code",[a._v("^")]),a._v(" 表示字符串开始。")]),a._v(" "),t("li",[t("code",[a._v("[a-zA-Z0-9._%+-]+")]),a._v(" 匹配用户名部分，可以包含字母、数字、点号、下划线、百分号、加号、减号。")]),a._v(" "),t("li",[t("code",[a._v("@")]),a._v(" 必须出现的符号。")]),a._v(" "),t("li",[t("code",[a._v("[a-zA-Z0-9.-]+")]),a._v(" 匹配域名部分。")]),a._v(" "),t("li",[t("code",[a._v("\\.")]),a._v(" 必须出现的点号，用来分隔域名和顶级域名。")]),a._v(" "),t("li",[t("code",[a._v("[a-zA-Z]{2,}")]),a._v(" 匹配至少两个字母的顶级域名。")]),a._v(" "),t("li",[t("code",[a._v("$")]),a._v(" 表示字符串结束。")])]),a._v(" "),t("h3",{attrs:{id:"_2-提取url中的域名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-提取url中的域名"}},[a._v("#")]),a._v(" 2. 提取URL中的域名")]),a._v(" "),t("p",[a._v("如果我们想从一段文本中提取所有的网址域名，可以使用以下正则：")]),a._v(" "),t("div",{staticClass:"language-regex line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-regex"}},[t("code",[t("span",{pre:!0,attrs:{class:"token anchor function"}},[a._v("\\b")]),t("span",{pre:!0,attrs:{class:"token group punctuation"}},[a._v("(?:")]),a._v("https"),t("span",{pre:!0,attrs:{class:"token quantifier number"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token alternation keyword"}},[a._v("|")]),a._v("ftp"),t("span",{pre:!0,attrs:{class:"token group punctuation"}},[a._v(")")]),a._v("://"),t("span",{pre:!0,attrs:{class:"token char-class"}},[t("span",{pre:!0,attrs:{class:"token char-class-punctuation punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token char-class-negation operator"}},[a._v("^")]),t("span",{pre:!0,attrs:{class:"token char-set class-name"}},[a._v("\\s")]),a._v("/$.?#"),t("span",{pre:!0,attrs:{class:"token char-class-punctuation punctuation"}},[a._v("]")])]),t("span",{pre:!0,attrs:{class:"token char-set class-name"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token char-class"}},[t("span",{pre:!0,attrs:{class:"token char-class-punctuation punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token char-class-negation operator"}},[a._v("^")]),t("span",{pre:!0,attrs:{class:"token char-set class-name"}},[a._v("\\s")]),t("span",{pre:!0,attrs:{class:"token char-class-punctuation punctuation"}},[a._v("]")])]),t("span",{pre:!0,attrs:{class:"token quantifier number"}},[a._v("*")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[t("code",[a._v("\\b")]),a._v(" 单词边界，确保URL是独立的。")]),a._v(" "),t("li",[t("code",[a._v("(?:https?|ftp)")]),a._v(" 匹配http、https或ftp协议。")]),a._v(" "),t("li",[t("code",[a._v("://")]),a._v(" URL中协议后的分隔符。")]),a._v(" "),t("li",[t("code",[a._v("[^\\s/$.?#]")]),a._v(" 匹配除了空白、斜杠、问号、点号、井号之外的字符，即域名开始。")]),a._v(" "),t("li",[t("code",[a._v("[^\\s]*")]),a._v(" 匹配域名剩余部分，直到遇到空白字符。")])]),a._v(" "),t("h2",{attrs:{id:"四、在线测试工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、在线测试工具"}},[a._v("#")]),a._v(" 四、在线测试工具")]),a._v(" "),t("p",[a._v("学习正则表达式的过程中，推荐使用在线测试工具如 RegExr、Regex101 等，它们不仅提供了实时的匹配预览，还内置了详细的教程和模式解释，极大提升了学习效率。")]),a._v(" "),t("p",[t("strong",[a._v("工具地址：")])]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.jyshare.com/front-end/7625/#!flags=&re=%5E(a%7Cb)*%3F%24",target:"_blank",rel:"noopener noreferrer"}},[a._v("正则表达式可视化工具 | 菜鸟工具 (jyshare.com)"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.jyshare.com/front-end/854/",target:"_blank",rel:"noopener noreferrer"}},[a._v("正则表达式在线测试 | 菜鸟工具 (jyshare.com)"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://regexr.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("RegExr: Learn, Build, & Test RegEx"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://regex101.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("regex101: build, test, and debug regex"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"学习参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#学习参考"}},[a._v("#")]),a._v(" 学习参考")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.runoob.com/regexp/regexp-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("正则表达式 – 教程 | 菜鸟教程 (runoob.com)"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.runoob.com/java/java-regular-expressions.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 正则表达式 | 菜鸟教程 (runoob.com)"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);