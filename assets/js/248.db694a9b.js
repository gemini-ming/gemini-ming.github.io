(window.webpackJsonp=window.webpackJsonp||[]).push([[248],{622:function(t,a,e){"use strict";e.r(a);var s=e(4),v=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"jmeter-使用小记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jmeter-使用小记"}},[t._v("#")]),t._v(" JMeter 使用小记")]),t._v(" "),a("h2",{attrs:{id:"设置中文界面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置中文界面"}},[t._v("#")]),t._v(" 设置中文界面")]),t._v(" "),a("blockquote",[a("p",[t._v("JMeter 安装打开后默认语言是英文，修改为中文的方法也很简单，目前笔者发现了 3 种修改语言的方法，如下文。")])]),t._v(" "),a("h3",{attrs:{id:"方法1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法1"}},[t._v("#")]),t._v(" 方法1")]),t._v(" "),a("p",[t._v("——修改 Options\n依次点击 Options--\x3eChoose Language--\x3eChinese(Simplified) 即可配置成中文简体，需注意的是"),a("strong",[t._v("该方法只对当次生效")]),t._v("，下次打开 Jmeter 依然是英文。如需永久生效，请使用下面两种方法。")]),t._v(" "),a("h3",{attrs:{id:"方法2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法2"}},[t._v("#")]),t._v(" 方法2")]),t._v(" "),a("p",[t._v("——修改 jmeter.properties 文件")]),t._v(" "),a("ul",[a("li",[t._v("打开 jmeter 解压缩文件下的 bin 目录，找到 jmeter.properties 文件并用编辑器打开，")]),t._v(" "),a("li",[t._v("在 "),a("code",[t._v("#Preferred GUI language")]),t._v(" 下面插入一行 "),a("code",[t._v("language=zh_CN")]),t._v("，修改后保存（如果有 "),a("code",[t._v("language=en")]),t._v(" 需要注释掉）")]),t._v(" "),a("li",[t._v("重新启动 Jmeter 界面显示为中文简体")])]),t._v(" "),a("h3",{attrs:{id:"方法3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法3"}},[t._v("#")]),t._v(" 方法3")]),t._v(" "),a("p",[t._v("——修改 jmeter.bat 文件")]),t._v(" "),a("ul",[a("li",[t._v("使用编辑器打开 JMeter 启动文件 jmeter.bat")]),t._v(" "),a("li",[t._v("将 "),a("code",[t._v('set JMETER_LANGUAGE=-Duser.language="en" -Duser.region="EN"')]),t._v(" 修改成 "),a("code",[t._v('set JMETER_LANGUAGE=-Duser.language="zh" -Duser.region="CN"')]),t._v("，保存代码")]),t._v(" "),a("li",[t._v("重新启动 Jmeter 界面显示为中文简体")])]),t._v(" "),a("h2",{attrs:{id:"设置使用中文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置使用中文"}},[t._v("#")]),t._v(" 设置使用中文")]),t._v(" "),a("p",[t._v("修改默认编码")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The encoding to be used if none is provided (default ISO-8859-1)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sampleresult.default.encoding=ISO-8859-1")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("修改成 "),a("code",[t._v("UTF-8")]),t._v(" 并放开注释：")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The encoding to be used if none is provided (default ISO-8859-1)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("sampleresult.default.encoding")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("UTF-8\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"提取并设置全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提取并设置全局变量"}},[t._v("#")]),t._v(" 提取并设置全局变量")]),t._v(" "),a("ol",[a("li",[t._v("需要添加【后置处理器】：JSON 提取器、调试后置处理程序、BeanShell 后置处理程序，进行参数变量的提取。")]),t._v(" "),a("li",[t._v("需要添加【配置元件】：HTTP 信息头处理器，进行变量的传递。")]),t._v(" "),a("li",[t._v("其中用到的表达式可用 Jmeter 工具自动生成。（函数助手）")])]),t._v(" "),a("p",[a("strong",[t._v("需要用到的工具：")])]),t._v(" "),a("p",[t._v("1、JSON 提取器")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/picx-images-hosting/project/image.6m3rk1sdeh.webp",loading:"lazy"}})]),t._v(" "),a("p",[t._v("2、BeanShell 后置处理程序")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/picx-images-hosting/project/image.6bgxqwk9x1.webp",loading:"lazy"}})]),t._v(" "),a("p",[a("strong",[t._v("函数助手的使用：")])]),t._v(" "),a("p",[t._v("1、提取全局变量")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/picx-images-hosting/project/image.9nznl9nybs.webp",loading:"lazy"}})]),t._v(" "),a("p",[t._v("2、使用全局变量")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/picx-images-hosting/project/image.5j4295vhqd.webp",loading:"lazy"}})]),t._v(" "),a("h2",{attrs:{id:"线程组的串行与并行执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程组的串行与并行执行"}},[t._v("#")]),t._v(" 线程组的串行与并行执行")]),t._v(" "),a("p",[t._v("勾选【测试计划】界面中的以下这个按钮，则为【串行】否则为【并行】。")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/picx-images-hosting/project/image.3nrhgj3bhg.png",loading:"lazy"}})]),t._v(" "),a("h2",{attrs:{id:"聚合报告相关信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合报告相关信息"}},[t._v("#")]),t._v(" 聚合报告相关信息")]),t._v(" "),a("p",[t._v("聚合报告（Aggregate Report）是 JMeter 中一个非常重要的监听器，用于展示性能测试结果的统计信息。")]),t._v(" "),a("p",[t._v("以下是对聚合报告的一些关键点的解释：")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("生成方式")]),t._v("：聚合报告可以通过两种方式生成，一种是从已有的 "),a("code",[t._v(".jtl")]),t._v(" 文件加载生成报告，另一种是在运行 JMeter 时动态生成聚合报告。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("数据来源")]),t._v("：聚合报告的数据来源于 SampleResult，每一行代表一个请求，同名请求的结果会合并显示。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("界面介绍")]),t._v("：聚合报告界面提供了多个指标，包括【Label（请求名称）、#Samples（样本数，即请求数量）、Average（平均响应时间）、Median（中位数）、90% Line、95% Line、99% Line（这些指标表示响应时间的百分位数）、Min（最小响应时间）、Max（最大响应时间）、Error%（错误率）、Throughput（吞吐量，每秒完成的请求数）以及数据传输速率（KB/sec）】。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("关键指标")]),t._v("：在分析聚合报告时，需要特别关注异常%、吞吐量、最大TPS和最大并发数等指标。异常%表示错误请求的比例，吞吐量反映了服务器的处理能力，最大TPS和最大并发数有助于确定系统的性能瓶颈。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("结果分析")]),t._v("：聚合报告提供了详尽的数据，帮助我们全面了解系统在不同负载下的表现，找到性能瓶颈，并制定相应的优化方案。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("注意事项")]),t._v("：在使用聚合报告时，注意不要在测试计划中使用相同的请求取样器名称，因为聚合报告是累加的，即每次运行的结果统计都是基于前一次运行的结果进行统计。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("百分位数")]),t._v("：聚合报告中的百分位数（如90% Line、95% Line、99% Line）表示相应百分比的请求响应时间"),a("strong",[t._v("不会超过")]),t._v("该值，这有助于我们了解响应时间的分布情况。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("图形结果")]),t._v("：JMeter 的“图形结果”（Graph Results）监听器可以以图形形式展示响应时间随时间的变化趋势，帮助我们发现哪些请求响应时间较长。")])])]),t._v(" "),a("h2",{attrs:{id:"测试小记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试小记"}},[t._v("#")]),t._v(" 测试小记")]),t._v(" "),a("h3",{attrs:{id:"基础概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础概念"}},[t._v("#")]),t._v(" 基础概念")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("并发量")]),t._v("：指在同一时间点内，系统中同时处理的用户请求数（是个相对的值，不是绝对值）")]),t._v(" "),a("li",[a("strong",[t._v("响应时间")]),t._v("：指系统处理一个请求所需的时间")]),t._v(" "),a("li",[a("strong",[t._v("吞吐量")]),t._v("：是指系统在给定时间内处理的业务请求数量")]),t._v(" "),a("li",[a("strong",[t._v("QPS")]),t._v(" (Queries Per Second)：表示系统每秒钟处理的请求数量")]),t._v(" "),a("li",[a("strong",[t._v("TPS")]),t._v("(Transactions Per Second)：表示系统每秒钟完成的事务数量（实际就是吞吐量）")])]),t._v(" "),a("h3",{attrs:{id:"qps-和吞吐量的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#qps-和吞吐量的区别"}},[t._v("#")]),t._v(" QPS 和吞吐量的区别？")]),t._v(" "),a("p",[t._v("QPS（Queries Per Second）和吞吐量（Throughput）都是衡量系统性能的指标，但它们的含义和计算方式有所不同。")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("QPS")]),t._v("（Queries Per Second）：QPS 是指"),a("strong",[t._v("每秒钟系统能够处理的请求数量")]),t._v("，通常用于衡量系统的并发处理能力。在 Web 应用中，QPS 表示每秒钟能够处理的 HTTP 请求次数。QPS 越高，系统的并发处理能力越强，能够同时处理更多的请求。")]),t._v(" "),a("li",[a("strong",[t._v("吞吐量")]),t._v("（Throughput）：吞吐量是指"),a("strong",[t._v("在一定时间内系统实际处理的任务量或数据量")]),t._v("。在计算机领域，吞吐量通常表示每秒钟系统能够处理的数据量或事务量。吞吐量越高，表示系统能够在单位时间内处理更多的任务或数据。")])]),t._v(" "),a("h3",{attrs:{id:"测试方向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试方向"}},[t._v("#")]),t._v(" 测试方向")]),t._v(" "),a("ol",[a("li",[t._v("测试接口的性能，通过【聚合报告】查看相关信息")]),t._v(" "),a("li",[t._v("通过修改服务器的【jvm参数】来检测内存大小对接口性能的影响，查看是否会有【内存泄漏】的现象\n"),a("ul",[a("li",[t._v("jvm 参数示例："),a("code",[t._v("-Xms2048m -Xmx2048m")]),t._v("，"),a("code",[t._v("-Xms128m -Xmx128m")])])])])]),t._v(" "),a("h3",{attrs:{id:"最高并发数探测方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最高并发数探测方法"}},[t._v("#")]),t._v(" 最高并发数探测方法")]),t._v(" "),a("ol",[a("li",[t._v("增加线程数，指到"),a("strong",[t._v("出现异常")])]),t._v(" "),a("li",[t._v("增加线程数，直到平均响应时间"),a("strong",[t._v("超过预期的值")]),t._v("（依项目而定，比如买票最多让用户等待 2 秒）")])]),t._v(" "),a("h3",{attrs:{id:"jvm-参数解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm-参数解释"}},[t._v("#")]),t._v(" JVM 参数解释")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("-Xms")]),t._v("：设置JVM启动时的初始内存大小。例如，"),a("code",[t._v("-Xms2048m")]),t._v(" 表示初始内存大小为2048兆字节（MB）。")]),t._v(" "),a("li",[a("code",[t._v("-Xmx")]),t._v("：设置JVM最大可用内存大小。例如，"),a("code",[t._v("-Xmx2048m")]),t._v(" 表示最大内存限制为2048MB。")])]),t._v(" "),a("h3",{attrs:{id:"内存泄漏-memory-leak"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏-memory-leak"}},[t._v("#")]),t._v(" 内存泄漏（Memory Leak）")]),t._v(" "),a("p",[t._v("内存泄漏是指在计算机程序中因为疏忽或错误导致的一种内存分配问题。当一个程序的可执行文件在运行时分配了内存给某个变量或对象，但在释放这个内存之前失去了对这块内存的引用，就会发生内存泄漏。简单来说，内存泄漏就是指程序在申请内存后，无法释放已经申请的内存空间。")]),t._v(" "),a("h4",{attrs:{id:"内存泄漏的影响"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏的影响"}},[t._v("#")]),t._v(" 内存泄漏的影响")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("性能下降")]),t._v("：随着时间的推移，内存泄漏可能导致应用程序消耗越来越多的内存，从而降低性能。")]),t._v(" "),a("li",[a("strong",[t._v("响应延迟")]),t._v("：内存泄漏可能导致垃圾回收器频繁运行，增加系统的响应延迟。")]),t._v(" "),a("li",[a("strong",[t._v("服务中断")]),t._v("：在极端情况下，内存泄漏可能导致应用程序或系统耗尽所有可用内存，从而引发服务中断或崩溃。")])]),t._v(" "),a("h4",{attrs:{id:"如何检测内存泄漏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何检测内存泄漏"}},[t._v("#")]),t._v(" 如何检测内存泄漏")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("监控工具")]),t._v("：使用内存监控工具（如 Java 的 VisualVM、MAT 等）来观察内存使用情况。")]),t._v(" "),a("li",[a("strong",[t._v("性能测试")]),t._v("：在不同的 JVM 参数设置下进行压力测试和性能测试，观察内存使用模式。")]),t._v(" "),a("li",[a("strong",[t._v("日志分析")]),t._v("：分析应用程序日志，检查是否有异常或错误可能与内存泄漏相关。")]),t._v(" "),a("li",[a("strong",[t._v("代码审查")]),t._v("：审查代码，特别是那些管理资源分配和释放的部分，确保没有逻辑错误。")])]),t._v(" "),a("h4",{attrs:{id:"调整-jvm-参数的目的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调整-jvm-参数的目的"}},[t._v("#")]),t._v(" 调整 JVM 参数的目的")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("性能评估")]),t._v("：评估不同内存设置对应用程序性能的影响。")]),t._v(" "),a("li",[a("strong",[t._v("资源优化")]),t._v("：找到最优的内存配置，以提高应用程序的响应速度和吞吐量。")]),t._v(" "),a("li",[a("strong",[t._v("稳定性测试")]),t._v("：测试在高负载情况下应用程序的稳定性和内存管理。")])]),t._v(" "),a("h2",{attrs:{id:"学习参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#学习参考"}},[t._v("#")]),t._v(" 学习参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/77b8d202deb1",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.jianshu.com/p/77b8d202deb1"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=v.exports}}]);