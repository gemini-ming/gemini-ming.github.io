(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{595:function(t,e,s){"use strict";s.r(e);var a=s(4),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"minio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minio"}},[t._v("#")]),t._v(" Minio")]),t._v(" "),e("h2",{attrs:{id:"官方文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#官方文档"}},[t._v("#")]),t._v(" 官方文档")]),t._v(" "),e("p",[t._v("官网："),e("a",{attrs:{href:"https://min.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://min.io/"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("中文："),e("a",{attrs:{href:"http://minio.org.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://minio.org.cn/"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"什么是-minio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-minio"}},[t._v("#")]),t._v(" 什么是 MinIo ?")]),t._v(" "),e("p",[t._v("人工智能数据基础设施的对象存储。")]),t._v(" "),e("blockquote",[e("p",[t._v("人工智能数据：")])]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("文本")]),t._v("数据：新闻报道、社交媒体文章、博客......")]),t._v(" "),e("li",[e("strong",[t._v("语音")]),t._v("数据：音频形式存储的数据，语音 mp3 文件......")]),t._v(" "),e("li",[e("strong",[t._v("图像")]),t._v("数据：各种图片......")]),t._v(" "),e("li",[e("strong",[t._v("视频")]),t._v("数据：各种视频、电影......")]),t._v(" "),e("li",[e("strong",[t._v("非结构化")]),t._v("数据：没有明确结构的数据，比如社交评论、日志文件......")])]),t._v(" "),e("blockquote",[e("p",[t._v("特征：")])]),t._v(" "),e("ul",[e("li",[t._v("为人工智能系统提供数据支持，数据存储；")]),t._v(" "),e("li",[t._v("对象存储（Object Storage）是一种数据"),e("strong",[t._v("存储架构")]),t._v("，它以"),e("strong",[t._v("对象")]),t._v("为单位来处理、存储和检索数据，每个对象都包含了"),e("strong",[t._v("数据本身")]),t._v("以及"),e("strong",[t._v("元数据")]),t._v("；")]),t._v(" "),e("li",[t._v("MinIO 存储的【元数据】主要包括"),e("strong",[t._v("对象的描述信息")]),t._v("，如用户（account）、存储桶（bucket）以及存储桶索引（bucket index）等；")]),t._v(" "),e("li",[t._v("对象存储系统通常通过基于 HTTP 或 HTTPS 协议的 API（"),e("strong",[t._v("应用程序编程接口")]),t._v("）进行数据读写；")])]),t._v(" "),e("blockquote",[e("p",[t._v("minio 版权许可：")])]),t._v(" "),e("ul",[e("li",[t._v("MinIO 具有双重许可：\n"),e("ul",[e("li",[t._v("开源 GNU AGPL v3；（"),e("strong",[t._v("完全免费")]),t._v("）")]),t._v(" "),e("li",[t._v("商业企业许可证；（"),e("em",[t._v("收费")]),t._v("）")])])]),t._v(" "),e("li",[t._v("兼容亚马逊 S3 云存储服务接口；")])]),t._v(" "),e("h2",{attrs:{id:"minio-环境部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minio-环境部署"}},[t._v("#")]),t._v(" MInIo 环境部署")]),t._v(" "),e("h3",{attrs:{id:"环境准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境准备"}},[t._v("#")]),t._v(" 环境准备")]),t._v(" "),e("ol",[e("li",[t._v("Github："),e("a",{attrs:{href:"https://github.com/minio",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/minio"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("Gitee："),e("a",{attrs:{href:"https://gitee.com/mirrors/minio",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gitee.com/mirrors/minio"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("Linux 下载："),e("code",[t._v("wget https://dl.min.io/server/minio/release/linux-amd64/minio")]),t._v(" "),e("ul",[e("li",[t._v("赋予可执行权限："),e("code",[t._v("chmod +x minio")]),t._v(" 或者 "),e("code",[t._v("chmod 744 minio")])]),t._v(" "),e("li",[t._v("minio 可执行程序怎么使用：minio [FLAGS] COMMAND [ARGS...]")])])])]),t._v(" "),e("h3",{attrs:{id:"启动-minio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动-minio"}},[t._v("#")]),t._v(" 启动 MInIo")]),t._v(" "),e("p",[t._v("执行命令：")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MINIO_ROOT_USER")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MINIO_ROOT_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("password ./minio server /mnt/data --console-address "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('":9001"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("或者：")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("./minio server /mnt/data --console-address "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('":9001"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("后台启动("),e("strong",[t._v("&结束")]),t._v(")：")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("./minio server /mnt/data --console-address "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('":9001"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("blockquote",[e("p",[t._v("指令解析：")])]),t._v(" "),e("ol",[e("li",[e("code",[t._v("MINIO ROOT USER")]),t._v(" 指定 MinIO 的用户名；")]),t._v(" "),e("li",[e("code",[t._v("MINIO ROOT PASSWORD")]),t._v(" 指定 MinIO 的密码；")]),t._v(" "),e("li",[e("code",[t._v("/mnt/data")]),t._v(" 指定 MinIO 服务器用于存储数据的目录；")]),t._v(" "),e("li",[e("code",[t._v('console-address ":9001"')]),t._v(" 指定 MinIO 控制台的"),e("strong",[t._v("监听地址")]),t._v("和"),e("strong",[t._v("端口")]),t._v("（只写 "),e("code",[t._v(":")]),t._v(" 表示 MinIO 服务器监听所有地址上的 9000 端口）")]),t._v(" "),e("li",[t._v("尾部加上与字符（"),e("code",[t._v("&")]),t._v("）代表后台启动")])]),t._v(" "),e("h3",{attrs:{id:"minio-关闭"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minio-关闭"}},[t._v("#")]),t._v(" MinIo 关闭")]),t._v(" "),e("p",[t._v("查询 MinIO 进程："),e("code",[t._v("ps -ef | grep minio")])]),t._v(" "),e("p",[e("strong",[t._v("后台")]),t._v("启动的 MinIO 如何关闭（杀死进程）："),e("code",[t._v("kill pid")])]),t._v(" "),e("p",[e("strong",[t._v("前台")]),t._v("启动的 MinIO 如果关闭："),e("code",[t._v("ctrl + c")])]),t._v(" "),e("h2",{attrs:{id:"使用-docker-启动-minio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-docker-启动-minio"}},[t._v("#")]),t._v(" 使用 Docker 启动 MinIo")]),t._v(" "),e("h3",{attrs:{id:"安装-docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker"}},[t._v("#")]),t._v(" 安装 Docker")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://cmty256.github.io/pages/44a072/",target:"_blank",rel:"noopener noreferrer"}},[t._v("安装Docker | 泪伤荡的编程指南 (cmty256.github.io)"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"拉取-minio-镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拉取-minio-镜像"}},[t._v("#")]),t._v(" 拉取 MinIo 镜像")]),t._v(" "),e("p",[t._v("使用 Docker 镜像启动 MinIO")]),t._v(" "),e("p",[t._v("1、搜索 MinIO 镜像："),e("code",[t._v("docker search minio")])]),t._v(" "),e("p",[t._v("2、拉取 MinIO 镜像："),e("code",[t._v("docker pull minio/minio")])]),t._v(" "),e("p",[t._v("3、启动 MinIO 容器："),e("code",[t._v("docker run -p 9000:9000 -p 9001:9001 minio/minio server /mnt/docker/data --console-address :9001")]),t._v("（会出现默认账密）")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 官方文档示例：https://min.io/docs/minio/container/index.html")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" ~/software/minio/data\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9000")]),t._v(":9000 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9001")]),t._v(":9001 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" minio "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" ~/software/minio/data:/data "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MINIO_ROOT_USER=ROOTNAME"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MINIO_ROOT_PASSWORD=CHANGEME123"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   quay.io/minio/minio server /data --console-address "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('":9001"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[t._v("解析：")]),t._v(" "),e("p",[t._v("上面的示例是这样工作的：")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("mkdir")]),t._v(" 在主目录中创建一个新的本地目录。"),e("code",[t._v("~/software/minio/data")])]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("-p")]),t._v(" 选项告诉 "),e("code",[t._v("mkdir")]),t._v(" 命令要创建指定路径中的所有父目录，即使其中的一些父目录不存在也会创建。如果省略 "),e("code",[t._v("-p")]),t._v(" 选项，而其中的某些父目录不存在，则 "),e("code",[t._v("mkdir")]),t._v(" 命令将会报错。")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("docker run")]),t._v(" 启动 MinIO 容器。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("-p")]),t._v(" 将本地端口绑定到容器端口。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("-name")]),t._v(" 为容器创建名称。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("-v")]),t._v(" 将文件路径设置为容器使用的持久卷位置。 当MinIO将数据写入 "),e("code",[t._v("/data")]),t._v(" 时，该数据会镜像到本地路径 "),e("code",[t._v("~/minio/data")]),t._v(", 使其能够在容器重新启动时保持持久化。 您可以设置任何具有读取、写入和删除权限的文件路径来使用。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("-e")]),t._v(" 分别设置环境变量（用户名和密码）。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("quay.io/minio/minio")]),t._v(" 是一个 Docker 镜像的名称，表示从 Quay.io 镜像仓库中拉取的 MinIO 镜像。"),e("code",[t._v("server /data")]),t._v(" 是运行在容器内部的 MinIO 命令，它告诉 MinIO 服务器在容器启动时将 "),e("code",[t._v("/data")]),t._v(" 目录作为数据存储目录，并且开始以服务器模式运行")])])]),t._v(" "),e("p",[t._v("查看已安装的镜像："),e("code",[t._v("docker images")])]),t._v(" "),e("p",[t._v("删除镜像："),e("code",[t._v("docker rmi minio/minio")]),t._v("（默认会有个别名，"),e("code",[t._v("rm")]),t._v(" 等价于 "),e("code",[t._v("rmi")]),t._v("）")]),t._v(" "),e("h2",{attrs:{id:"windows-下启动-minio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#windows-下启动-minio"}},[t._v("#")]),t._v(" Windows 下启动 MinIo")]),t._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://min.io/download?license=agpl&platform=windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("MinIO | 官方下载文档（Windows）"),e("OutboundLink")],1)])]),t._v(" "),e("ol",[e("li",[t._v("下载 windows 版的 MinIO："),e("a",{attrs:{href:"https://dl.min.io/server/minio/release/windows-amd64/minio.exe",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://dl.min.io/server/minio/release/windows-amd64/minio.exe"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("进入到 minio.exe 所在的目录：执行 "),e("code",[t._v("minio.exe server D:\\dev\\MinIO\\data")]),t._v("    启动 minio 服务，其中 "),e("code",[t._v("D:\\software\\MinIO\\data")]),t._v(" 是 MinIO "),e("strong",[t._v("存储数据的目录路径")])]),t._v(" "),e("li",[t._v("在浏览器输入："),e("a",{attrs:{href:"http://localhost:9000/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:9000/"),e("OutboundLink")],1),t._v("，登录 MinIO 服务器 web 管理后台")]),t._v(" "),e("li",[t._v("默认用户名密码都是 minioadmin")])]),t._v(" "),e("h2",{attrs:{id:"spring-boot-集成-minio-开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-集成-minio-开发"}},[t._v("#")]),t._v(" Spring Boot 集成 MinIO 开发")]),t._v(" "),e("p",[e("strong",[t._v("官方文档")]),t._v("：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://min.io/docs/minio/linux/developers/minio-drivers.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://min.io/docs/minio/linux/developers/minio-drivers.html"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://minio.org.cn/docs/minio/linux/developers/minio-drivers.html#java-sdk",target:"_blank",rel:"noopener noreferrer"}},[t._v("软件开发工具包（SDK） — MinIO中文文档 | MinIO Linux中文文档"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://minio.org.cn/docs/minio/linux/developers/java/minio-java.html#minio-java-quickstart",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java快速指南 — MinIO中文文档 | MinIO Linux中文文档"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://min.io/docs/minio/linux/developers/java/API.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java Client API Reference — MinIO Object Storage for Linux"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"操作步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作步骤"}},[t._v("#")]),t._v(" 操作步骤")]),t._v(" "),e("p",[t._v("1、建项目；")]),t._v(" "),e("p",[t._v("2、加依赖；（目前没有 "),e("code",[t._v("**-minio-starter")]),t._v(" 的依赖）")]),t._v(" "),e("p",[t._v("3、配文件；")]),t._v(" "),e("p",[t._v("4、写代码；")]),t._v(" "),e("p",[t._v("5、去运行；")]),t._v(" "),e("h3",{attrs:{id:"minio-中的-bucket、object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minio-中的-bucket、object"}},[t._v("#")]),t._v(" MinIO 中的 Bucket、Object")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Bucket")]),t._v(" 是存储 Object 的逻辑空间，每个 Bucket 之间的数据是相互隔离的，对用户而言，相当于存放文件的顶层"),e("strong",[t._v("文件夹")]),t._v("；")]),t._v(" "),e("li",[e("strong",[t._v("Object")]),t._v(" 是存储到 MinIO 的基本对象，对用户而言，相当于"),e("strong",[t._v("文件")]),t._v("；")])]),t._v(" "),e("h3",{attrs:{id:"minioclient-的常用-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minioclient-的常用-api"}},[t._v("#")]),t._v(" MinioClient 的常用 API")]),t._v(" "),e("h4",{attrs:{id:"操作桶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作桶"}},[t._v("#")]),t._v(" 操作桶")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("bucketExists()")]),t._v("：用于检查指定的存储桶是否存在，"),e("strong",[t._v("返回布尔值")]),t._v("，表示存储桶是否存在；")]),t._v(" "),e("li",[e("code",[t._v("makeBucket()")]),t._v("：用于创建一个新的存储桶（bucket），需要指定存储桶的名称，"),e("strong",[t._v("无返回值")]),t._v("，创建失败会抛出异常；")]),t._v(" "),e("li",[e("code",[t._v("listBuckets()")]),t._v("：用于列出用户有权访问的所有存储桶，"),e("strong",[t._v("返回存储桶的列表")]),t._v("；")]),t._v(" "),e("li",[e("code",[t._v("removeBucket()")]),t._v("：用于删除一个已存在的存储桶（bucket），"),e("strong",[t._v("无返回值")]),t._v("，删除失败会抛出异常；")])]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("报错")]),t._v("：\nThe difference between the request time and the server's time is too large.")]),t._v(" "),e("p",[t._v("请求时间与服务器时间之间的差异太大。")]),t._v(" "),e("p",[e("strong",[t._v("解决（同步一下 Linux 时间）")]),t._v('：\n1、yum install ntpdate -y（这里的"-y"是指yum）')]),t._v(" "),e("p",[t._v("2、ntpdate pool.ntp.org")])]),t._v(" "),e("h4",{attrs:{id:"操作对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作对象"}},[t._v("#")]),t._v(" 操作对象")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("putObject()")]),t._v("：用于"),e("strong",[t._v("上传文件")]),t._v("到指定的存储桶；")]),t._v(" "),e("li",[e("code",[t._v("statObject()")]),t._v("：用于"),e("strong",[t._v("检查")]),t._v("指定的对象（文件）的"),e("strong",[t._v("状态")]),t._v("；")]),t._v(" "),e("li",[e("code",[t._v("getPresignedObjectUrl()")]),t._v("：用于"),e("strong",[t._v("生成")]),t._v("一个对象（文件）的"),e("strong",[t._v("签名 URL")]),t._v("，以便可以通过 HTTP 访问；")]),t._v(" "),e("li",[e("code",[t._v("getObject()")]),t._v("：用于从指定的存储桶中"),e("strong",[t._v("下载文件")]),t._v("；")]),t._v(" "),e("li",[e("code",[t._v("listObjects()")]),t._v("：用于"),e("strong",[t._v("列出")]),t._v("指定存储桶中的"),e("strong",[t._v("所有对象")]),t._v("（文件）；")]),t._v(" "),e("li",[e("code",[t._v("removeObject()")]),t._v("：用于"),e("strong",[t._v("删除")]),t._v("指定存储桶中的对象，"),e("strong",[t._v("需要指定【存储桶名称】和【对象键】")]),t._v("；")])]),t._v(" "),e("blockquote",[e("p",[t._v("上传到 MinIO 服务器上的文件是否可以通过 "),e("a",{attrs:{href:"http://ip:9000/%E5%AD%98%E5%82%A8%E6%A1%B6/%E6%96%87%E4%BB%B6%E5%90%8D",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://ip:9000/存储桶/文件名"),e("OutboundLink")],1),t._v(" 直接访问？")])]),t._v(" "),e("p",[t._v("默认情况下是不能直接访问的；")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://192.168.11.128:9000/myfile/test.jpg",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://192.168.11.128:9000/myfile/test.jpg"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("strong",[t._v("方式一")]),t._v("：")]),t._v(" "),e("ul",[e("li",[t._v("在 web 管理后台修改；（访问策略修改为 public）")])]),t._v(" "),e("p",[e("strong",[t._v("方式二")]),t._v("：")]),t._v(" "),e("ul",[e("li",[t._v("通过客户端 API 修改；")])]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问策略配置 json 串，版本号需根据官方的来（web 管理后台有）")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" policyJsonString "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{\\"Version\\" : \\"2012-10-17\\",\\"Statement\\":[{\\"Sid\\":\\"PublicRead\\",\\"Effect\\":\\"Allow\\",\\"Principal\\":{\\"AWS\\":\\"*\\"},\\"Action\\":[\\"s3:GetObject\\"],\\"Resource\\":[\\"arn:aws:s3:::"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" bucketName "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/*\\"]}]}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h2",{attrs:{id:"vue3-springboot3-minio-实践"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue3-springboot3-minio-实践"}},[t._v("#")]),t._v(" Vue3 + SpringBoot3 + Minio 实践")]),t._v(" "),e("h3",{attrs:{id:"vue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),e("p",[t._v("Vue 是一款 Web 前端 JavaScript 框架；")]),t._v(" "),e("p",[e("strong",[t._v("官网")]),t._v("："),e("a",{attrs:{href:"https://vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://vuejs.org/"),e("OutboundLink")],1)]),t._v(" "),e("h4",{attrs:{id:"前端运行环境和工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端运行环境和工具"}},[t._v("#")]),t._v(" 前端运行环境和工具")]),t._v(" "),e("p",[t._v("1、node.js 是一个开源跨平台的 JavaScript "),e("strong",[t._v("运行时环境")]),t._v("，可以理解成 java 中的 "),e("code",[t._v("jdk")]),t._v("；")]),t._v(" "),e("p",[t._v("官网："),e("a",{attrs:{href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://nodejs.org/"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("2、npm 是 JavaScript "),e("strong",[t._v("依赖包管理工具")]),t._v("，可以进行前端项目的打包、依赖下载等，可以理解成 java 中的 "),e("code",[t._v("maven")]),t._v("；")]),t._v(" "),e("p",[t._v("官网："),e("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.npmjs.com/"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("3、Vite 是快速构建前端 Vue 项目的"),e("strong",[t._v("脚手架")]),t._v("，可以理解为开发 Spring Boot 的 "),e("code",[t._v("Spring Initializr 快速构建工具")]),t._v("；")]),t._v(" "),e("p",[t._v("官网："),e("a",{attrs:{href:"https://cn.vitejs.dev/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://cn.vitejs.dev/"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("如表格所示：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("前端 Vue")]),t._v(" "),e("th",[t._v("后端 Java")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("node.js")]),t._v(" "),e("td",[t._v("jdk")])]),t._v(" "),e("tr",[e("td",[t._v("npm")]),t._v(" "),e("td",[t._v("maven")])]),t._v(" "),e("tr",[e("td",[t._v("vite")]),t._v(" "),e("td",[t._v("Spring Initializr")])])])]),t._v(" "),e("h4",{attrs:{id:"安装-node-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-node-js"}},[t._v("#")]),t._v(" 安装 Node.js")]),t._v(" "),e("p",[t._v("下载："),e("a",{attrs:{href:"https://nodejs.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://nodejs.org"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("安装：解压即完成安装；(使用的是 zip 压缩包)")]),t._v(" "),e("p",[e("strong",[t._v("Nodejs环境变量配置")])]),t._v(" "),e("p",[t._v("1、在 "),e("code",[t._v("D:\\software\\node-v20.12.0-win-x64")]),t._v(" 下创建 2 个文件夹：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("node_global （"),e("strong",[t._v("依赖库")]),t._v("）")])]),t._v(" "),e("li",[e("p",[t._v("node_cache （"),e("strong",[t._v("缓存")]),t._v("）")])])]),t._v(" "),e("p",[t._v("2、在 "),e("code",[t._v("D:\\software\\node-v20.12.0-win-x64")]),t._v(" 目录下 "),e("code",[t._v("cmd")]),t._v(" 进入命令行窗口，执行：")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" prefix "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"D:\\software'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("ode-v20.12.0-win-x64"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('ode_global"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" cache "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"D:\\software'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("ode-v20.12.0-win-x64"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('ode_cache"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("3、查看有没有设置成功：")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config get prefix\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config get cache\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("4、配置环境变量 Path，在 Path 变量中添加如下路径：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("D:\\software\\node-v20.12.0-win-x64 \n\nD:\\software\\node-v20.12.0-win-x64\\node_global\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("在任意目录打开 windows 窗口查看是否配置成功：")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("blockquote",[e("p",[t._v("注：Node.js 已经自带 npm，安装 Node.js 时即已安装了 npm，故不需要再安装 npm；")])]),t._v(" "),e("h4",{attrs:{id:"vue-工程运行流程分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-工程运行流程分析"}},[t._v("#")]),t._v(" Vue 工程运行流程分析")]),t._v(" "),e("div",{staticClass:"language-vue line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[t._v("// 运行的入口\nmain.js   \n\n从vue框架导入createApp函数功能；\nimport { createApp } from 'vue'\n\n// 从一个单文件组件中导入根组件；\nimport App from './App.vue';\n\n// 创建一个vue对象；\nconst app = createApp(App);\n\n// 挂载到项目首页的 "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 这个 id 下；\napp.mount('#app')    \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("h4",{attrs:{id:"使用-element-plus"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-element-plus"}},[t._v("#")]),t._v(" 使用 element-plus")]),t._v(" "),e("p",[e("strong",[t._v("安装依赖")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("npm install element-plus --save")])]),t._v(" "),e("li",[t._v("其中 "),e("code",[t._v("--save")]),t._v(" 表示将安装包信息写入 "),e("code",[t._v("package.json")]),t._v(" 的 "),e("code",[t._v("dependencies")]),t._v(" 中；")]),t._v(" "),e("li",[t._v("在 "),e("code",[t._v("dependencies")]),t._v(" 中，那么项目打包就会依赖到该模块；")]),t._v(" "),e("li",[t._v("如果项目打包时不需要依赖该模块，则使用 "),e("code",[t._v("--save-dev")]),t._v("，它会将安装包信息写入 "),e("code",[t._v("devDependencies")]),t._v(" 下，表示项目开发时需要依赖该模块，项目打包发布则不需要依赖该模块；")])]),t._v(" "),e("p",[e("strong",[t._v("在 main.js 中导入")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("import ElementPlus from 'element-plus'")])]),t._v(" "),e("li",[e("code",[t._v("import 'element-plus/dist/index.css'")])]),t._v(" "),e("li",[e("code",[t._v("app.use(ElementPlus)")])])]),t._v(" "),e("p",[t._v("跨域处理")]),t._v(" "),e("p",[t._v("源头：http://localhost:5173  目的地：http://localhost:8080/api/users")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("协议不同")])]),t._v(" "),e("li",[e("strong",[t._v("域名不同")])]),t._v(" "),e("li",[e("strong",[t._v("端口不同")])])]),t._v(" "),e("p",[t._v("三个里面只要有任何一个不同就是跨域；")]),t._v(" "),e("p",[e("strong",[t._v("解决方法")])]),t._v(" "),e("ul",[e("li",[t._v("在每个 Controller 上加入 @CrossOrigin 注解解决跨域；")]),t._v(" "),e("li",[t._v("编写配置文件统一处理；")]),t._v(" "),e("li",[t._v("网关处统一处理。")])]),t._v(" "),e("h2",{attrs:{id:"minio-集群部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minio-集群部署"}},[t._v("#")]),t._v(" MinIO 集群部署")]),t._v(" "),e("h3",{attrs:{id:"纠删码模式部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#纠删码模式部署"}},[t._v("#")]),t._v(" 纠删码模式部署")]),t._v(" "),e("ul",[e("li",[t._v("纠删码（"),e("em",[t._v("Erasure Code")]),t._v("）简称 EC，是一种"),e("strong",[t._v("数据保护")]),t._v("方法，也是一种算法；")]),t._v(" "),e("li",[t._v("MinIO 对纠删码模式的算法进行了实现，采用 Reed-Solomon code（简称"),e("em",[t._v("RScode")]),t._v("）纠错码将对象拆分成 "),e("strong",[t._v("N/2 数据和 N/2 奇偶校验块")]),t._v("，Reed Solomon 利用范德蒙矩阵（Vandermonde matrix）、柯西矩阵（Cauchy matrix）的特性来实现；")]),t._v(" "),e("li",[t._v("即将数据拆分为多个数据块和多个校验块，分散存储在不同的磁盘上，即使在部分磁盘损坏或丢失的情况下，也可以通过剩余的数据块和校验块恢复出原始数据；")]),t._v(" "),e("li",[t._v("举个例子，现在有 "),e("strong",[t._v("12 块磁盘")]),t._v("，一个对象数据会被分成 "),e("strong",[t._v("6 个数据块、6 个奇偶校验块")]),t._v("，你可以损坏或丢失任意 6 块磁盘（不管其是存放的数据块还是奇偶校验块），你仍可以从剩下的磁盘中恢复数据，牛不牛？")])])])}),[],!1,null,null,null);e.default=n.exports}}]);