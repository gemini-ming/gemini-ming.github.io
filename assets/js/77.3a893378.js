(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{407:function(v,_,a){"use strict";a.r(_);var t=a(1),s=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"b树"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#b树"}},[v._v("#")]),v._v(" B树")]),v._v(" "),_("h2",{attrs:{id:"初识-b树"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#初识-b树"}},[v._v("#")]),v._v(" 初识 B树")]),v._v(" "),_("p",[v._v("B树 是一种平衡的"),_("strong",[v._v("多路")]),v._v("搜索树，多用于文件系统、数据库的实现")]),v._v(" "),_("p",[_("em",[v._v("特点")])]),v._v(" "),_("ul",[_("li",[v._v("1 个节点可以存储"),_("strong",[v._v("超过")]),v._v(" 2 个元素、可以拥有"),_("strong",[v._v("超过")]),v._v(" 2 个子节点")]),v._v(" "),_("li",[v._v("拥有二叉搜索树的一些性质（左右大小关系）")]),v._v(" "),_("li",[v._v("平衡，每个节点的所有子树高度一致")]),v._v(" "),_("li",[v._v("比较矮")])]),v._v(" "),_("h2",{attrs:{id:"m-阶-b树-的性质-m-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#m-阶-b树-的性质-m-2"}},[v._v("#")]),v._v(" m 阶 B树 的性质（m>=2)")]),v._v(" "),_("blockquote",[_("p",[v._v("m 阶的意思：就是意味着这棵 B树 最多有 m 个子节点，每个节点最多存储 m-1 个元素。")])]),v._v(" "),_("p",[_("em",[v._v("1、假设一个节点存储的元素个数为 x")])]),v._v(" "),_("ul",[_("li",[v._v("根节点: "),_("code",[v._v("1 <= x <= m - 1")])]),v._v(" "),_("li",[v._v("非根节点: "),_("code",[v._v("┌ m/2 ┐ - 1 < x < m - 1")])]),v._v(" "),_("li",[_("strong",[_("code",[v._v("┌ m/2 ┐")]),v._v(" -- 是向上取整的意思")])])]),v._v(" "),_("p",[_("em",[v._v("2、如果有子节点，子节点个数为 y = x + 1")])]),v._v(" "),_("ul",[_("li",[v._v("根节点: "),_("code",[v._v("2 <= y <= m")])]),v._v(" "),_("li",[v._v("非根节点: "),_("code",[v._v("┌ m/2 ┐ <= y <= m")]),v._v(" "),_("ul",[_("li",[v._v("比如 m = 3，"),_("code",[v._v("2 <= y <= 3")]),v._v("，因此可以称为 (2,3) 树、2-3 树")]),v._v(" "),_("li",[v._v("比如 m = 4，"),_("code",[v._v("2 <= y <= 4")]),v._v("，因此可以称为 (2,4) 树、2-3-4 树")]),v._v(" "),_("li",[v._v("比如 m = 5，"),_("code",[v._v("3 <= y <= 5")]),v._v("，因此可以称为 (3,5) 树")]),v._v(" "),_("li",[v._v("比如 m = 6，"),_("code",[v._v("3 <= y <= 6")]),v._v("，因此可以称为 (3,6) 树")]),v._v(" "),_("li",[v._v("比如 m = 7，"),_("code",[v._v("4 <= y <= 7")]),v._v("，因此可以称为 (4,7) 树")])])])]),v._v(" "),_("p",[_("em",[v._v("4 阶 B树 如下图所示")])]),v._v(" "),_("p",[_("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/imgs-blog/basics/image.bdx7egi3h0o.webp",loading:"lazy"}})]),v._v(" "),_("p",[_("em",[v._v("数据库实现中一般用【几阶B树】？")])]),v._v(" "),_("p",[v._v("一般是 200 ~ 300")]),v._v(" "),_("p",[_("em",[v._v("思考：如果 m = 2，那【B树】是什么样子的？")])]),v._v(" "),_("h2",{attrs:{id:"b树-vs-二叉搜索树"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#b树-vs-二叉搜索树"}},[v._v("#")]),v._v(" B树 VS 二叉搜索树")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("B树 和 二又搜索树，在逻辑上是等价的（只不过是【B树】一个节点融合了多个元素）")])]),v._v(" "),_("li",[_("p",[v._v("多代节点合并，可以获得一个超级节点")]),v._v(" "),_("ul",[_("li",[v._v("2 代合并的超级节点，最多拥有 4 个子节点（至少是 4阶B树）")]),v._v(" "),_("li",[v._v("3 代合并的超级节点，最多拥有 8 个子节点（至少是 8阶B树）")]),v._v(" "),_("li",[v._v("n 代合并的超级节点，最多拥有 (2^n) 个子节点（至少是 2^n 阶B树）")])])]),v._v(" "),_("li",[_("p",[v._v("m阶B树，最多需要 log2(m) 代合并")])])]),v._v(" "),_("p",[_("em",[v._v("二叉搜索树")])]),v._v(" "),_("p",[_("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/imgs-blog/basics/image.14ire6wq0q4g.webp",loading:"lazy"}})]),v._v(" "),_("p",[_("em",[v._v("B树")])]),v._v(" "),_("p",[_("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/imgs-blog/basics/image.2qhwhkleth00.webp",loading:"lazy"}})]),v._v(" "),_("h2",{attrs:{id:"搜索"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#搜索"}},[v._v("#")]),v._v(" 搜索")]),v._v(" "),_("ol",[_("li",[v._v("先在节点内部从小到大开始搜索")]),v._v(" "),_("li",[v._v("元素如果命中，搜索结束")]),v._v(" "),_("li",[v._v("如果未命中，再去对应的子节点中搜索元素，重复步骤 1")])]),v._v(" "),_("h2",{attrs:{id:"添加"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#添加"}},[v._v("#")]),v._v(" 添加")]),v._v(" "),_("h3",{attrs:{id:"上溢现象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#上溢现象"}},[v._v("#")]),v._v(" 上溢现象")]),v._v(" "),_("p",[v._v("当在【B树】中添加元素时，可能会导致上溢（Overflow）情况，即"),_("strong",[v._v("节点中的关键字个数超过了节点的容量")]),v._v("。")]),v._v(" "),_("h3",{attrs:{id:"上溢的解决"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#上溢的解决"}},[v._v("#")]),v._v(" 上溢的解决")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("上溢节点的元素个数必然等于 m。")])]),v._v(" "),_("li",[_("p",[v._v("假设上溢节点最中间元素的"),_("strong",[v._v("位置")]),v._v("为 k")]),v._v(" "),_("ul",[_("li",[v._v("将 k 位置的元素向上与父节点合并")]),v._v(" "),_("li",[v._v("将 [0, k-1] 和 [k+1, m-1] 位置的元素分裂成 2 个子节点\n"),_("ul",[_("li",[v._v("这 2 个子节点的元素个数，必然都不会低于最低限制 ("),_("code",[v._v("┌ m/2 ┐ - 1")]),v._v(")")])])])])]),v._v(" "),_("li",[_("p",[v._v("一次分裂完毕后，有可能导致父节点上溢，依然按照上述方法解决")]),v._v(" "),_("ul",[_("li",[v._v("最极端的情况，有可能一直分裂到根节点")])])])]),v._v(" "),_("p",[_("em",[v._v("具体如下图所示")])]),v._v(" "),_("p",[_("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/imgs-blog/images/image.5ktcbq5cgxo0.webp",loading:"lazy"}})]),v._v(" "),_("h3",{attrs:{id:"插入元素分析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#插入元素分析"}},[v._v("#")]),v._v(" 插入元素分析")]),v._v(" "),_("p",[_("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/imgs-blog/images/image.3tawr0tpjy40.webp",loading:"lazy"}})]),v._v(" "),_("h2",{attrs:{id:"删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[v._v("#")]),v._v(" 删除")]),v._v(" "),_("h3",{attrs:{id:"删除-叶子节点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#删除-叶子节点"}},[v._v("#")]),v._v(" 删除 - 叶子节点")]),v._v(" "),_("p",[v._v("假如需要删除的元素在叶子节点中，那么直接删除即可。")]),v._v(" "),_("h3",{attrs:{id:"删除-非叶子节点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#删除-非叶子节点"}},[v._v("#")]),v._v(" 删除 - 非叶子节点")]),v._v(" "),_("p",[v._v("假如需要删除的元素在非叶子节点中")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("先找到前驱或后继元素，覆盖所需删除元素的值")])]),v._v(" "),_("li",[_("p",[v._v("再把前驱或后继元素删除")])])]),v._v(" "),_("p",[_("em",[v._v("如下图示：")])]),v._v(" "),_("p",[_("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/imgs-blog/images/image.74119nw0ac80.webp",loading:"lazy"}})]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("非叶子节点")]),v._v("的前驱或后继元素，必定在"),_("strong",[v._v("叶子节点")]),v._v("中")]),v._v(" "),_("li",[v._v("所以这里的删除前驱或后继元素，就是最开始提到的情况: 删除的元素在叶子节点中")])]),v._v(" "),_("h3",{attrs:{id:"下溢现象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#下溢现象"}},[v._v("#")]),v._v(" 下溢现象")]),v._v(" "),_("ul",[_("li",[v._v("叶子节点被删掉一个元素后，元素个数可能会低于最低限制("),_("code",[v._v("┌ m/2 ┐ - 1")]),v._v(")")]),v._v(" "),_("li",[v._v("这种现象称为："),_("strong",[v._v("下溢")]),v._v("（underflow）")])]),v._v(" "),_("h3",{attrs:{id:"下溢的解决"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#下溢的解决"}},[v._v("#")]),v._v(" 下溢的解决")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("下溢节点的元素数量必然等于 "),_("code",[v._v("┌ m/2 ┐ - 2")])])]),v._v(" "),_("li",[_("p",[v._v("如果下溢节点临近的兄弟节点，有"),_("em",[v._v("至少")]),v._v(" "),_("code",[v._v("┌ m/2 ┐")]),v._v(" 个元素，可以向其"),_("strong",[v._v("借")]),v._v("一个元素")]),v._v(" "),_("ul",[_("li",[v._v("将父节点的元素 b 插入到下溢节点的 0 位置(最小位置)")]),v._v(" "),_("li",[v._v("用兄弟节点的元素 a (最大的元素) 替代父节点的元素 b")]),v._v(" "),_("li",[v._v("这种操作其实就是："),_("strong",[v._v("旋转")])])]),v._v(" "),_("p",[_("img",{staticClass:"lazy",attrs:{alt:"image-20231103180147476","data-src":"https://cmty256.github.io/imgs-blog/basics/image-20231103180147476.h3t6ljlt7z4.webp",loading:"lazy"}})])]),v._v(" "),_("li",[_("p",[v._v("如果下溢节点临近的兄弟节点，"),_("em",[v._v("只有")]),v._v(" "),_("code",[v._v("┌ m/2 ┐ - 1")]),v._v(" 个元素")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("将父节点的元素 b 挪下来跟左右子节点进行"),_("strong",[v._v("合并")])])]),v._v(" "),_("li",[_("p",[v._v("合并后的节点元素个数等于 "),_("code",[v._v("┌ m/2 ┐ + ┌ m/2 ┐ - 2")]),v._v("，不超过 "),_("code",[v._v("m - 1")])])]),v._v(" "),_("li",[_("p",[v._v("这个操作可能会导致父节点下溢，依然按照上述方法解决，下溢现象可能会一直往上传播，最坏的情况是一直到根节点下溢")])])])])]),v._v(" "),_("p",[_("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/imgs-blog/images/image.4pan5l0305u0.webp",loading:"lazy"}})]),v._v(" "),_("p",[_("em",[v._v("根节点下溢怎么办？")])]),v._v(" "),_("p",[v._v("这个时候根节点必然是：")]),v._v(" "),_("ul",[_("li",[v._v("根节点所有东西跟它底下子节点合并成新的根节点。")]),v._v(" "),_("li",[v._v("此时树会变矮，少掉一层")])]),v._v(" "),_("h2",{attrs:{id:"_4阶b树"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4阶b树"}},[v._v("#")]),v._v(" 4阶B树")]),v._v(" "),_("p",[_("strong",[v._v("4阶B树")]),v._v("的性质")]),v._v(" "),_("ol",[_("li",[v._v("所有节点能"),_("strong",[v._v("存储的元素个数")]),v._v(" x: "),_("em",[v._v("1 <= x <= 3")])]),v._v(" "),_("li",[v._v("所有非叶子节点的"),_("strong",[v._v("子节点个数")]),v._v(" y: "),_("em",[v._v("2 <= y <= 4")])])]),v._v(" "),_("p",[_("em",[v._v("思考")])]),v._v(" "),_("p",[v._v("从 1 添加到 22，从 1 删除到 22 的情况。")]),v._v(" "),_("p",[v._v("可通过该网站查看流程细节："),_("a",{attrs:{href:"https://www.cs.usfca.edu/~galles/visualization/BTree.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("B-Tree Visualization (usfca.edu)"),_("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=s.exports}}]);