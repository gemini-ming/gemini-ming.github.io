(window.webpackJsonp=window.webpackJsonp||[]).push([[234],{607:function(t,e,a){"use strict";a.r(e);var i=a(4),r=Object(i.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"debug-篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#debug-篇"}},[t._v("#")]),t._v(" Debug 篇")]),t._v(" "),e("h3",{attrs:{id:"按键介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#按键介绍"}},[t._v("#")]),t._v(" 按键介绍")]),t._v(" "),e("p",[e("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/imgs-blog/images/image.2d5si7shsvk0.webp",loading:"lazy"}})]),t._v(" "),e("p",[t._v("从左到右：")]),t._v(" "),e("ol",[e("li",[t._v("Show Execution Point (Alt + F10)：如果你的光标在其它行或其它页面，点击这个按钮可跳转到当前代码执行的行。")]),t._v(" "),e("li",[t._v("Step Over (F8)：步过，一行一行地往下走，如果这一行上有方法不会进入方法。")]),t._v(" "),e("li",[t._v("Step Into (F7)：步入，如果当前行有方法，可以进入方法内部，一般用于进入自定义方法内，不会进入官方类库的方法，如第25行的put方法。")]),t._v(" "),e("li",[t._v("Force Step Into (Alt + Shift + F7)：强制步入，能进入任何方法，查看底层源码的时候可以用这个进入官方类库的方法。")]),t._v(" "),e("li",[t._v("Step Out (Shift + F8)：步出，从步入的方法内退出到方法调用处，此时方法已执行完毕，只是还没有完成赋值。")]),t._v(" "),e("li",[t._v("Drop Frame (默认无)：回退断点。")]),t._v(" "),e("li",[t._v("Run to Cursor (Alt + F9)：运行到光标处，你可以将光标定位到你需要查看的那一行，然后使用这个功能，代码会运行至光标行，而不需要打断点。")]),t._v(" "),e("li",[t._v("Evaluate Expression (Alt + F8)：计算表达式。")])]),t._v(" "),e("p",[e("img",{staticClass:"lazy",attrs:{alt:"image-20230603163939263","data-src":"https://cmty256.github.io/imgs-blog/images/image-20230603163939263.4exr02sj4zs.webp",loading:"lazy"}})]),t._v(" "),e("p",[t._v("从上到下：")]),t._v(" "),e("ol",[e("li",[t._v("Rerun 'xxxx'：重新运行程序，会关闭服务后重新启动程序。")]),t._v(" "),e("li",[t._v("Update 'tech' application (Ctrl + F5)：更新程序，一般在你的代码有改动后可执行这个功能。而这个功能对应的操作则是在服务配置里。")]),t._v(" "),e("li",[t._v("Resume Program (F9)：恢复程序，比如，你在第20行和25行有两个断点，当前运行至第20行，按F9，则运行到下一个断点(即第25行)，再按F9，则运行完整个流程，因为后面已经没有断点了。")]),t._v(" "),e("li",[t._v("Pause Program：暂停程序，启用Debug。目前没发现具体用法。")]),t._v(" "),e("li",[t._v("Stop 'xxx' (Ctrl + F2)：连续按两下，关闭程序。有时候你会发现关闭服务再启动时，报端口被占用，这是因为没完全关闭服务的原因，你就需要查杀所有JVM进程了。")]),t._v(" "),e("li",[t._v("View Breakpoints (Ctrl + Shift + F8)：查看所有断点，后面章节会涉及到。")]),t._v(" "),e("li",[t._v("Mute Breakpoints：哑的断点，选择这个后，所有断点变为灰色，断点失效，按F9则可以直接运行完程序。再次点击，断点变为红色，有效。如果只想使某一个断点失效，可以在断点上右键取消Enabled，如图2.4，则该行断点失效。")])]),t._v(" "),e("h3",{attrs:{id:"搭配插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#搭配插件"}},[t._v("#")]),t._v(" 搭配插件")]),t._v(" "),e("p",[t._v("JRebel for IntelliJ：提供了对 JRebel 的支持，可以在不重启应用程序的情况下进行代码更改和调试。")]),t._v(" "),e("h3",{attrs:{id:"学习参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#学习参考"}},[t._v("#")]),t._v(" 学习参考")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://blog.csdn.net/huangjinjin520/article/details/100035427",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/huangjinjin520/article/details/100035427"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://ken.io/note/java-quickstart-idea-debug-skill",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://ken.io/note/java-quickstart-idea-debug-skill"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.cn/post/7043243319006068766",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 IDEA 中使用 Debug，简直太爽了！ - 掘金 (juejin.cn)"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);